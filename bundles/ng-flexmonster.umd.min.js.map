{"version":3,"sources":["ng://ng-flexmonster/flexmonster.component.ts","ng://ng-flexmonster/flexmonster.module.ts"],"names":["FlexmonsterPivot","el","this","cellclick","EventEmitter","celldoubleclick","chartclick","dataerror","datafilecancelled","dataloaded","datachanged","fieldslistclose","fieldslistopen","filterclose","filteropen","drillthroughopen","drillthroughclose","fullscreen","loadingdata","loadinglocalization","loadingolapstructure","loadingreportfile","localizationerror","localizationloaded","olapstructureerror","olapstructureloaded","openingreportfile","querycomplete","queryerror","ready","reportchange","reportcomplete","reportfilecancelled","reportfileerror","reportfileloaded","runningquery","update","beforetoolbarcreated","beforegriddraw","aftergriddraw","afterchartdraw","root","prototype","ngOnInit","_this","flexmonster","window","container","getElementsByClassName","componentFolder","width","height","toolbar","licenseKey","report","global","customizeAPIRequest","customizeCell","customizeContextMenu","cell","next","event","Component","args","selector","template","ElementRef","Input","Output","FlexmonsterPivotModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Component, ElementRef, Input, Output, EventEmitter } from '@angular/core';\r\nimport * as Flexmonster from 'flexmonster';\r\n\r\n@Component({\r\n  selector: 'fm-pivot',\r\n  template: '<div><div class=\"fm-ng-wrapper\"></div></div>'\r\n})\r\nexport class FlexmonsterPivot {\r\n  // params\r\n  @Input() toolbar: boolean;\r\n  @Input() licenseKey: string;\r\n  @Input() width: string | number;\r\n  @Input() height: string | number;\r\n  @Input() componentFolder: string;\r\n  @Input() report: Flexmonster.Report | string;\r\n  @Input() global: Flexmonster.Report;\r\n  @Input() customizeAPIRequest: (request: Object) => Object;\r\n  @Input() customizeCell: (cell: Flexmonster.CellBuilder, data: Flexmonster.CellData) => void;\r\n  @Input() customizeContextMenu: (cell: Flexmonster.ContextMenuItem[], data: Flexmonster.CellData | Flexmonster.ChartData, viewType: string) => Flexmonster.ContextMenuItem[];\r\n  // events\r\n  @Output() cellclick: EventEmitter<Flexmonster.CellData> = new EventEmitter();\r\n  @Output() celldoubleclick: EventEmitter<Flexmonster.CellData> = new EventEmitter();\r\n  @Output() chartclick: EventEmitter<Flexmonster.ChartData> = new EventEmitter();\r\n  @Output() dataerror: EventEmitter<Object> = new EventEmitter();\r\n  @Output() datafilecancelled: EventEmitter<Object> = new EventEmitter();\r\n  @Output() dataloaded: EventEmitter<Object> = new EventEmitter();\r\n  @Output() datachanged: EventEmitter<Object> = new EventEmitter();\r\n  @Output() fieldslistclose: EventEmitter<Object> = new EventEmitter();\r\n  @Output() fieldslistopen: EventEmitter<Object> = new EventEmitter();\r\n  @Output() filterclose: EventEmitter<Object> = new EventEmitter();\r\n  @Output() filteropen: EventEmitter<Object> = new EventEmitter();\r\n  @Output() drillthroughopen: EventEmitter<Flexmonster.CellData | Flexmonster.ChartData> = new EventEmitter();\r\n  @Output() drillthroughclose: EventEmitter<Object> = new EventEmitter();\r\n  @Output() fullscreen: EventEmitter<Object> = new EventEmitter();\r\n  @Output() loadingdata: EventEmitter<Object> = new EventEmitter();\r\n  @Output() loadinglocalization: EventEmitter<Object> = new EventEmitter();\r\n  @Output() loadingolapstructure: EventEmitter<Object> = new EventEmitter();\r\n  @Output() loadingreportfile: EventEmitter<Object> = new EventEmitter();\r\n  @Output() localizationerror: EventEmitter<Object> = new EventEmitter();\r\n  @Output() localizationloaded: EventEmitter<Object> = new EventEmitter();\r\n  @Output() olapstructureerror: EventEmitter<Object> = new EventEmitter();\r\n  @Output() olapstructureloaded: EventEmitter<Object> = new EventEmitter();\r\n  @Output() openingreportfile: EventEmitter<Object> = new EventEmitter();\r\n  @Output() querycomplete: EventEmitter<Object> = new EventEmitter();\r\n  @Output() queryerror: EventEmitter<Object> = new EventEmitter();\r\n  @Output() ready: EventEmitter<Flexmonster.Pivot> = new EventEmitter();\r\n  @Output() reportchange: EventEmitter<Object> = new EventEmitter();\r\n  @Output() reportcomplete: EventEmitter<Object> = new EventEmitter();\r\n  @Output() reportfilecancelled: EventEmitter<Object> = new EventEmitter();\r\n  @Output() reportfileerror: EventEmitter<Object> = new EventEmitter();\r\n  @Output() reportfileloaded: EventEmitter<Object> = new EventEmitter();\r\n  @Output() runningquery: EventEmitter<Object> = new EventEmitter();\r\n  @Output() update: EventEmitter<Object> = new EventEmitter();\r\n  @Output() beforetoolbarcreated: EventEmitter<Object> = new EventEmitter();\r\n  @Output() beforegriddraw: EventEmitter<Object> = new EventEmitter();\r\n  @Output() aftergriddraw: EventEmitter<Object> = new EventEmitter();\r\n  @Output() afterchartdraw: EventEmitter<Object> = new EventEmitter();\r\n  // api\r\n  public flexmonster: Flexmonster.Pivot;\r\n  // private\r\n  private root: HTMLElement;\r\n\r\n  constructor(el: ElementRef) {\r\n    this.root = <HTMLElement>el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.flexmonster = window['Flexmonster']({\r\n      container: this.root.getElementsByClassName('fm-ng-wrapper')[0],\r\n      componentFolder: this.componentFolder,\r\n      width: this.width,\r\n      height: this.height,\r\n      toolbar: this.toolbar,\r\n      licenseKey: this.licenseKey,\r\n      report: this.report,\r\n      global: this.global,\r\n      customizeAPIRequest: this.customizeAPIRequest,\r\n      customizeCell: this.customizeCell,\r\n      customizeContextMenu: this.customizeContextMenu,\r\n      cellclick: (cell: Flexmonster.CellData) => this.cellclick.next(cell),\r\n      celldoubleclick: (cell: Flexmonster.CellData) => this.celldoubleclick.next(cell),\r\n      chartclick: (event: Flexmonster.ChartData) => this.chartclick.next(event),\r\n      datachanged: (event: Object) => this.datachanged.next(event),\r\n      dataerror: (event: Object) => this.dataerror.next(event),\r\n      datafilecancelled: () => this.datafilecancelled.next(),\r\n      dataloaded: () => this.dataloaded.next(),\r\n      fieldslistclose: () => this.fieldslistclose.next(),\r\n      fieldslistopen: () => this.fieldslistopen.next(),\r\n      filterclose: () => this.filterclose.next(),\r\n      filteropen: () => this.filteropen.next(),\r\n      drillthroughopen: (cell: Flexmonster.CellData | Flexmonster.ChartData) => this.drillthroughopen.next(cell),\r\n      drillthroughclose: () => this.drillthroughclose.next(),\r\n      loadingdata: () => this.loadingdata.next(),\r\n      loadinglocalization: () => this.loadinglocalization.next(),\r\n      loadingolapstructure: () => this.loadingolapstructure.next(),\r\n      loadingreportfile: () => this.loadingreportfile.next(),\r\n      localizationerror: () => this.localizationerror.next(),\r\n      localizationloaded: () => this.localizationloaded.next(),\r\n      olapstructureerror: () => this.olapstructureerror.next(),\r\n      olapstructureloaded: () => this.olapstructureloaded.next(),\r\n      openingreportfile: () => this.openingreportfile.next(),\r\n      querycomplete: () => this.querycomplete.next(),\r\n      queryerror: () => this.queryerror.next(),\r\n      ready: () => this.ready.next(this.flexmonster),\r\n      reportchange: () => this.reportchange.next(),\r\n      reportcomplete: () => this.reportcomplete.next(),\r\n      reportfileloaded: () => this.reportfileloaded.next(),\r\n      reportfilecancelled: () => this.reportfilecancelled.next(),\r\n      reportfileerror: () => this.reportfileerror.next(),\r\n      runningquery: () => this.runningquery.next(),\r\n      update: () => this.update.next(),\r\n      beforetoolbarcreated: (toolbar: Object) => this.beforetoolbarcreated.next(toolbar),\r\n      beforegriddraw: (event: Object) => this.beforegriddraw.next(event),\r\n      aftergriddraw: (event: Object) => this.aftergriddraw.next(event),\r\n      afterchartdraw: () => this.afterchartdraw.next()\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexmonsterPivot } from './flexmonster.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [FlexmonsterPivot],\r\n  exports: [FlexmonsterPivot]\r\n})\r\nexport class FlexmonsterPivotModule { }\r\n"]}